name: Collect FX rates

on:
  schedule:
    - cron: "* * * * *"   # every minute (UTC)
  workflow_dispatch: {}

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # allow push with GITHUB_TOKEN

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Gate to PT window
        id: gate
        run: |
          PT_HOUR=$(TZ=America/Los_Angeles date +%H)
          if [ "$PT_HOUR" -ge 5 ] && [ "$PT_HOUR" -lt 16 ]; then
            echo "in_window=true" >> $GITHUB_OUTPUT
          else
            echo "in_window=false" >> $GITHUB_OUTPUT
          fi

      - name: Install jq
        if: steps.gate.outputs.in_window == 'true'
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Collect 5 one-minute samples
        if: steps.gate.outputs.in_window == 'true'
        env:
          WISE_TOKEN: ${{ secrets.WISE_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p docs
          [ -f docs/data.json ] || echo "[]" > docs/data.json
          
          collect_once() {
            . scripts/rates.sh
            OUT=$(nap)
            mc=$(echo "$OUT"   | awk 'NR>1 && $1=="mc"{print $2}')
            vi=$(echo "$OUT"   | awk 'NR>1 && $1=="visa"{print $2}')
            wi=$(echo "$OUT"   | awk 'NR>1 && $1=="wise"{print $2}')
            [ -n "$mc" ] && [ -n "$vi" ] && [ -n "$wi" ] || return 0
            TS=$(TZ=America/Los_Angeles date -Iseconds)
            tmp=$(mktemp)
            jq --arg ts "$TS" --arg mc "$mc" --arg vi "$vi" --arg wi "$wi" '
              . + [{
                ts:$ts, mc:($mc|tonumber), visa:($vi|tonumber), wise:($wi|tonumber),
                spread_mc:(($wi|tonumber)-($mc|tonumber)),
                spread_visa:(($wi|tonumber)-($vi|tonumber))
              }] | (.[-19800:] // .)   # 30d @ 1-min cadence (11h/day â‰ˆ 19,800)
            ' docs/data.json > "$tmp"
            mv "$tmp" docs/data.json
          }
          
          for i in 1 2 3 4 5; do
            collect_once
            [ "$i" -lt 5 ] && sleep 60
          done

      - name: Commit & push if changed
        if: steps.gate.outputs.in_window == 'true'
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add docs/data.json
          if ! git diff --cached --quiet; then
            git commit -m "data: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
          else
            echo "No changes"
          fi
